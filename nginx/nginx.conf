worker_processes auto;

events {
    worker_connections 1024;
}

http {
    set_real_ip_from 10.0.0.0/8;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    resolver 127.0.0.11 valid=10s;

    server {
        listen 80;
        server_name localhost;

        
        location /api/hospital {
            content_by_lua_block {
                -- Load required libraries
                local cjson = require("cjson")
                local producer = require("resty.kafka.producer")
                local http = require "resty.http"
                local httpc = http.new()

                -- Define Kafka brokers
                local broker_list = {
                    { host = "kafka", port = 9092 }
                }

                -- Produce a message to request-topic
                local bp, err = producer:new(broker_list, { producer_type = "sync" })
                if not bp then
                    ngx.log(ngx.ERR, "Failed to create Kafka producer: ", err)
                    ngx.status = ngx.HTTP_INTERNAL_SERVER_ERROR
                    ngx.say("Failed to create Kafka producer")
                    return
                end

                local topic = "request-topic"
                local message = {
                    event = "hospital-request"
                }

                -- Send the message to Kafka
                local ok, err = bp:send(topic, nil, cjson.encode(message))
                if not ok then
                    ngx.log(ngx.ERR, "Failed to send message to Kafka: ", err)
                    ngx.status = ngx.HTTP_INTERNAL_SERVER_ERROR
                    ngx.say("Failed to send message to Kafka")
                    return
                end

                ngx.log(ngx.INFO, "Message sent successfully to topic ", topic)

                -- Fetch from aggregate-hospital
                local res, err = httpc:request_uri("http://aggregate-hospital:5000/api/hospital", {
                    method = "GET"
                })

                -- Return a success message
                ngx.status = ngx.HTTP_OK
                ngx.header.content_type = "application/json"
                ngx.say(res.body)
            }
        }
    }
}
